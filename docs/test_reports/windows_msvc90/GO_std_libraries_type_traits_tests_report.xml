<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="128" failures="0" disabled="0" errors="0" timestamp="2020-01-02T15:56:26" time="0.271" name="AllTests">
  <testsuite name="std_fundamental_type_specializer_test_suite" tests="128" failures="0" disabled="0" errors="0" time="0.268">
    <testcase name="test_explicit_integer_type_specializer" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_default_value" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_construction" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_get_set" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_simple_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_addition_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_subtraction_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_multiplication_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_division_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_modulo_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_and_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_or_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_xor_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_left_shift_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_right_shift_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_unary_plus_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_unary_minus_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_addition_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_subtraction_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_multiplication_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_division_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_modulo_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_not_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_and_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_or_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_xor_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_left_shift_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_right_shift_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_not_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_less_than_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_greater_than_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_less_than_or_equal_to_comparison_operator" status="run" time="0.001" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_greater_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_pre_increment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_post_increment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_pre_decrement_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_post_decrement_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_default_value" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_construction" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_get_set" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_simple_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_addition_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_subtraction_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_multiplication_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_division_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_modulo_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_unary_plus_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_unary_minus_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_addition_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_subtraction_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_multiplication_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_division_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_modulo_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_not_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_less_than_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_greater_than_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_less_than_or_equal_to_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_greater_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_pre_increment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_post_increment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_pre_decrement_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_post_decrement_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_default_value" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_construction" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_get_set" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_simple_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_addition_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_subtraction_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_multiplication_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_division_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_modulo_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_and_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_or_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_xor_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_left_shift_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_right_shift_assignment_operator" status="run" time="0.001" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_unary_plus_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_unary_minus_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_addition_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_subtraction_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_multiplication_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_division_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_modulo_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_not_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_and_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_or_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_xor_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_left_shift_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_right_shift_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_not_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_less_than_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_greater_than_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_less_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_greater_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_pre_increment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_post_increment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_pre_decrement_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_post_decrement_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_default_value" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_construction" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_get_set" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_simple_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_addition_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_subtraction_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_multiplication_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_division_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_modulo_assignment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_unary_plus_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_unary_minus_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_addition_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_subtraction_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_multiplication_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_division_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_modulo_arithmetic_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_not_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_less_than_to_comparison_operator" status="run" time="0.001" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_greater_than_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_less_than_or_equal_to_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_greater_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_pre_increment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_post_increment_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_pre_decrement_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_post_decrement_operator" status="run" time="0" classname="std_fundamental_type_specializer_test_suite" />
  </testsuite>
</testsuites>
