<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="182" failures="0" disabled="0" errors="0" timestamp="2019-09-30T18:06:50" time="0.502" name="AllTests">
  <testsuite name="std_ascii_test_suite" tests="24" failures="0" disabled="0" errors="0" time="0.058">
    <testcase name="test_multibyte_character_count" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_system_wide_character_count" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_ucs_2_character_count" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_utf_8_character_count" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_char_is_7_bit_ascii_character" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_char8_t_is_7_bit_ascii_character" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_wchar_t_is_7_bit_ascii_character" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_char2_t_is_7_bit_ascii_character" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_multibyte_reduce_iso_8859_1_to_7_bit_ascii_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_system_wide_reduce_iso_8859_1_to_7_bit_ascii_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_ucs_2_reduce_iso_8859_1_to_7_bit_ascii_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_utf_8_reduce_iso_8859_1_to_7_bit_ascii_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_multibyte_reduce_iso_8859_1_to_7_bit_ascii_non_strict_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_system_wide_reduce_iso_8859_1_to_7_bit_ascii_non_strict_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_ucs_2_reduce_iso_8859_1_to_7_bit_ascii_non_strict_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_utf_8_reduce_iso_8859_1_to_7_bit_ascii_non_strict_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_multibyte_reduce_windows_1252_to_7_bit_ascii_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_system_wide_reduce_windows_1252_to_7_bit_ascii_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_ucs_2_reduce_windows_1252_to_7_bit_ascii_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_utf_8_reduce_windows_1252_to_7_bit_ascii_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_multibyte_reduce_windows_1252_to_7_bit_ascii_non_strict_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_system_wide_reduce_windows_1252_to_7_bit_ascii_non_strict_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_ucs_2_reduce_windows_1252_to_7_bit_ascii_non_strict_characters" status="run" time="0" classname="std_ascii_test_suite" />
    <testcase name="test_utf_8_reduce_windows_1252_to_7_bit_ascii_non_strict_characters" status="run" time="0" classname="std_ascii_test_suite" />
  </testsuite>
  <testsuite name="std_circular_buffer_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.004">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_circular_buffer_test_suite" />
  </testsuite>
  <testsuite name="std_container_size_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_container_size_test_suite" />
  </testsuite>
  <testsuite name="std_create_string_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_create_string_test_suite" />
  </testsuite>
  <testsuite name="std_erase_iterator_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_erase_iterator_test_suite" />
  </testsuite>
  <testsuite name="std_iso_8859_1_test_suite" tests="8" failures="0" disabled="0" errors="0" time="0.018">
    <testcase name="test_multibyte_character_count" status="run" time="0" classname="std_iso_8859_1_test_suite" />
    <testcase name="test_system_wide_character_count" status="run" time="0" classname="std_iso_8859_1_test_suite" />
    <testcase name="test_ucs_2_character_count" status="run" time="0" classname="std_iso_8859_1_test_suite" />
    <testcase name="test_utf_8_character_count" status="run" time="0" classname="std_iso_8859_1_test_suite" />
    <testcase name="test_char_is_iso_8859_1_character" status="run" time="0" classname="std_iso_8859_1_test_suite" />
    <testcase name="test_char8_t_is_iso_8859_1_character" status="run" time="0" classname="std_iso_8859_1_test_suite" />
    <testcase name="test_wchar_t_is_iso_8859_1_character" status="run" time="0" classname="std_iso_8859_1_test_suite" />
    <testcase name="test_char2_t_is_iso_8859_1_character" status="run" time="0" classname="std_iso_8859_1_test_suite" />
  </testsuite>
  <testsuite name="std_monitor_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.005">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_monitor_test_suite" />
  </testsuite>
  <testsuite name="std_placebo_lockable_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.004">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_placebo_lockable_test_suite" />
  </testsuite>
  <testsuite name="std_primitive_type_specializer_test_suite" tests="128" failures="0" disabled="0" errors="0" time="0.323">
    <testcase name="test_explicit_integer_type_specializer" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_default_value" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_construction" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_get_set" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_simple_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_addition_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_subtraction_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_multiplication_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_division_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_modulo_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_and_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_or_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_xor_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_left_shift_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_right_shift_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_unary_plus_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_unary_minus_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_addition_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_subtraction_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_multiplication_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_division_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_modulo_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_not_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_and_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_or_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_xor_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_left_shift_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_bitwise_right_shift_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_not_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_less_than_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_greater_than_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_less_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_greater_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_pre_increment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_post_increment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_pre_decrement_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_integer_type_specializer_post_decrement_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_default_value" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_construction" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_get_set" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_simple_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_addition_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_subtraction_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_multiplication_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_division_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_modulo_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_unary_plus_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_unary_minus_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_addition_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_subtraction_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_multiplication_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_division_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_modulo_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_not_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_less_than_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_greater_than_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_less_than_or_equal_to_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_greater_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_pre_increment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_post_increment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_pre_decrement_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_floating_point_type_specializer_post_decrement_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_default_value" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_construction" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_get_set" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_simple_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_addition_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_subtraction_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_multiplication_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_division_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_modulo_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_and_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_or_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_xor_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_left_shift_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_right_shift_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_unary_plus_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_unary_minus_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_addition_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_subtraction_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_multiplication_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_division_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_modulo_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_not_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_and_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_or_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_xor_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_left_shift_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_bitwise_right_shift_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_not_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_less_than_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_greater_than_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_less_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_greater_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_pre_increment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_post_increment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_pre_decrement_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_integer_type_specializer_post_decrement_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_default_value" status="run" time="0.001" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_construction" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_get_set" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_simple_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_addition_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_subtraction_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_multiplication_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_division_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_modulo_assignment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_unary_plus_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_unary_minus_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_addition_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_subtraction_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_multiplication_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_division_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_modulo_arithmetic_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_not_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_less_than_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_greater_than_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_less_than_or_equal_to_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_greater_than_or_equal_to_comparison_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_pre_increment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_post_increment_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_pre_decrement_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
    <testcase name="test_implicit_floating_point_type_specializer_post_decrement_operator" status="run" time="0" classname="std_primitive_type_specializer_test_suite" />
  </testsuite>
  <testsuite name="std_recursive_spin_lock_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_recursive_spin_lock_test_suite" />
  </testsuite>
  <testsuite name="std_reverse_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.004">
    <testcase name="cpp14_not_supported" status="run" time="0" classname="std_reverse_test_suite" />
  </testsuite>
  <testsuite name="std_scope_guard_new_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="test_scope_guard_new" status="run" time="0" classname="std_scope_guard_new_test_suite" />
  </testsuite>
  <testsuite name="std_scope_guard_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.006">
    <testcase name="test_scope_guard" status="run" time="0" classname="std_scope_guard_test_suite" />
  </testsuite>
  <testsuite name="std_spin_lock_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_spin_lock_test_suite" />
  </testsuite>
  <testsuite name="std_string_cast_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_string_cast_test_suite" />
  </testsuite>
  <testsuite name="std_try_move_iterator_backward_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.004">
    <testcase name="cpp11_not_supported" status="run" time="0" classname="std_try_move_iterator_backward_test_suite" />
  </testsuite>
  <testsuite name="std_value_guard_test_suite" tests="1" failures="0" disabled="0" errors="0" time="0.002">
    <testcase name="test_value_guard" status="run" time="0" classname="std_value_guard_test_suite" />
  </testsuite>
  <testsuite name="std_windows_1252_test_suite" tests="8" failures="0" disabled="0" errors="0" time="0.017">
    <testcase name="test_multibyte_character_count" status="run" time="0.001" classname="std_windows_1252_test_suite" />
    <testcase name="test_system_wide_character_count" status="run" time="0" classname="std_windows_1252_test_suite" />
    <testcase name="test_ucs_2_character_count" status="run" time="0" classname="std_windows_1252_test_suite" />
    <testcase name="test_utf_8_character_count" status="run" time="0" classname="std_windows_1252_test_suite" />
    <testcase name="test_char_is_windows_1252_character" status="run" time="0" classname="std_windows_1252_test_suite" />
    <testcase name="test_char8_t_is_windows_1252_character" status="run" time="0" classname="std_windows_1252_test_suite" />
    <testcase name="test_wchar_t_is_windows_1252_character" status="run" time="0" classname="std_windows_1252_test_suite" />
    <testcase name="test_char2_t_is_windows_1252_character" status="run" time="0" classname="std_windows_1252_test_suite" />
  </testsuite>
</testsuites>
